{
  "requirements": [{
    "description": "Exiba apenas os nomes do produtos na tabela `products`",
    "bonus": false
  }, {
    "description": "Exiba os dados de todas as colunas da tabela `products`",
    "bonus": true
  }, {
    "description": "Escreva uma query que exiba os valores da coluna que representa a primary key da tabela `products`",
    "bonus": false
  }, {
    "description": "Conte quantos registros existem em `product_name` de `products`",
    "bonus": false
  }, {
    "description": "Monte uma query que exiba os dados da tabela `products` a partir do quarto registro até o décimo terceiro, incluindo tanto um quanto o outro",
    "bonus": false
  }, {
    "description": "Exiba os dados das colunas `product_name` e `id` da tabela `products` de maneira que os resultados estejam em ordem alfabética dos nomes",
    "bonus": false
  }, {
    "description": "Mostre apenas os ids dos 5 últimos registros da tabela `products` (a ordernação deve ser baseada na coluna `id`)",
    "bonus": false
  }, {
    "description": "Faça uma consulta que retorne três colunas contendo os nomes `A`, `Trybe` e `eh` com os valores `5 + 6`, `\"de\"` e `2 + 8`, respectivamente",
    "bonus": false
  }, {
    "description": "Mostre todos os valores de `notes` da tabela `purchase_orders` que não são nulos",
    "bonus": false
  }, {
    "description": "Mostre todos os dados da tabela `purchase_orders` em ordem decrescente ordenados por `created_by` em que o `created_by` é maior ou igual a 3",
    "bonus": false
  }, {
    "description": "Exiba os dados de `notes` da tabela `purchase_orders` em que seu valor de \"Purchase generated based on Order\" está entre 30 e 39, incluindo tanto o valor de 30 quanto de 39",
    "bonus": false
  }, {
    "description": "Mostre as `submitted_date` de `purchase_orders` em que a `submitted_date` é do dia 26 de abril de 2006",
    "bonus": false
  }, {
    "description": "Mostre o `supplier_id` das `purchase_orders` em que o `supplier_id` seja 1 ou 3",
    "bonus": false
  }, {
    "description": "Mostre os `supplier_id` da `purchase_orders` em que o `supplier_id` seja de 1 a 3, incluindo tanto o 1 quanto o 3",
    "bonus": false
  }, {
    "description": "Mostre somente as horas (sem os minutos e os segundos) da `submitted_date` de todos registros de `purchase_orders`. Chame essa coluna de `submitted_hour`",
    "bonus": false
  }, {
    "description": "Exiba a `submitted_date` das `purchase_orders` que estão entre `2006-01-26 00:00:00` e `2006-03-31 23:59:59`",
    "bonus": false
  }, {
    "description": "Mostre os registros das colunas `id` e `supplier_id` das `purchase_orders` em que os `supplier_id` sejam tanto 1, ou 3, ou 5, ou 7",
    "bonus": false
  }, {
    "description": "Mostre todos os registros de `purchase_orders` que tem o `supplier_id` igual a 3 e `status_id` igual a 2",
    "bonus": false
  }, {
    "description": "Quantos pedidos foram feitos na tabela `orders` pelo `employee_id` igual a 5 ou 6, e que foram enviados através do método `shipper_id` igual a 2? Chame a coluna de orders_count",
    "bonus": false
  }, {
    "description": "Adicione ao `order_details` uma linha com os seguintes dados: `order_id`: 69, `product_id`: 80, `quantity`: 15.0000, `unit_price`: 15.0000, `discount`: 0, `status_id`: 2, `date_allocated`: NULL, `purchase_order_id`: NULL e `inventory_id`: 129",
    "bonus": false
  }, {
    "description": "Adicione, com um único `INSERT`, duas linhas ao `order_details` com os mesmos dados. Esses dados são novamente os mesmos do requisito 20",
    "bonus": false
  }, {
    "description": "Atualize os dados de `discount` do `order_details` para 15",
    "bonus": false
  }, {
    "description": "Atualize os dados de `discount` da tabela `order_details` para 30 cuja `unit_price` seja menor que 10.0000",
    "bonus": false
  }, {
    "description": "Atualize os dados de `discount` da tabela `order_details` para 45 cuja `unit_price` seja maior que 10.0000 e o id seja um número entre 30 a 40",
    "bonus": false
  }, {
    "description": "Delete todos os dados em que a `unit_price` da tabela `order_details` seja menor que 10.0000",
    "bonus": false
  }, {
    "description": "Delete todos os dados em que a `unit_price` da tabela `order_details` seja maior que 10.0000",
    "bonus": false
  }, {
    "description": "Delete todos os dados da tabela `order_details`",
    "bonus": false
  }]
}

{
  "stats": {
    "suites": 8,
    "tests": 24,
    "passes": 24,
    "pending": 0,
    "failures": 0,
    "start": "2020-09-26T02:10:29.514Z",
    "end": "2020-09-26T02:11:12.866Z",
    "duration": 43352,
    "testsRegistered": 24,
    "passPercent": 100,
    "pendingPercent": 0,
    "other": 0,
    "hasOther": false,
    "skipped": 0,
    "hasSkipped": false
  },
  "results": [
    {
      "uuid": "1a8d4899-12ff-4cd4-92c4-eeba4cfcf348",
      "title": "",
      "fullFile": "cypress/integration/recipes_list_spec.js",
      "file": "cypress/integration/recipes_list_spec.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "b0cb7028-d2ca-40bf-938b-c3ad6ca7a09a",
          "title": "Todos os elementos devem respeitar os atributos descritos no protótipo para a tela principal de receitas",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "A tela tem os data-testids de todos os 12 cards da tela de comidas",
              "fullTitle": "Todos os elementos devem respeitar os atributos descritos no protótipo para a tela principal de receitas A tela tem os data-testids de todos os 12 cards da tela de comidas",
              "timedOut": null,
              "duration": 3589,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.visit('http://localhost:3000/comidas', {\n  onBeforeLoad: function onBeforeLoad(win) {\n    win.fetch = fetchMock;\n  }\n});\nfor (var index = 0; index < 12; index += 1) {\n  cy.get(\"[data-testid=\\\"\".concat(index, \"-recipe-card\\\"]\"));\n  cy.get(\"[data-testid=\\\"\".concat(index, \"-card-img\\\"]\"));\n  cy.get(\"[data-testid=\\\"\".concat(index, \"-card-name\\\"]\"));\n}\ncy.get('[data-testid=\"12-recipe-card\"]').should('not.exist');\ncy.get('[data-testid=\"12-card-img\"]').should('not.exist');\ncy.get('[data-testid=\"12-card-name\"]').should('not.exist');",
              "err": {},
              "uuid": "a9137ffd-d29b-4f4c-81dc-a179fc7a0081",
              "parentUUID": "b0cb7028-d2ca-40bf-938b-c3ad6ca7a09a",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "A tela tem os data-testids de todos os 12 cards da tela de bebidas",
              "fullTitle": "Todos os elementos devem respeitar os atributos descritos no protótipo para a tela principal de receitas A tela tem os data-testids de todos os 12 cards da tela de bebidas",
              "timedOut": null,
              "duration": 1389,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.visit('http://localhost:3000/bebidas', {\n  onBeforeLoad: function onBeforeLoad(win) {\n    win.fetch = fetchMock;\n  }\n});\nfor (var index = 0; index < 12; index += 1) {\n  cy.get(\"[data-testid=\\\"\".concat(index, \"-recipe-card\\\"]\"));\n  cy.get(\"[data-testid=\\\"\".concat(index, \"-card-img\\\"]\"));\n  cy.get(\"[data-testid=\\\"\".concat(index, \"-card-name\\\"]\"));\n}\ncy.get('[data-testid=\"12-recipe-card\"]').should('not.exist');\ncy.get('[data-testid=\"12-card-img\"]').should('not.exist');\ncy.get('[data-testid=\"12-card-name\"]').should('not.exist');",
              "err": {},
              "uuid": "bdde2cc7-68a0-4595-9580-32eb439aede1",
              "parentUUID": "b0cb7028-d2ca-40bf-938b-c3ad6ca7a09a",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "a9137ffd-d29b-4f4c-81dc-a179fc7a0081",
            "bdde2cc7-68a0-4595-9580-32eb439aede1"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 4978,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "263ad522-61eb-42b4-9f44-2e19c4066aa9",
          "title": "Devem ser carregadas as 12 primeiras receitas de comidas ou bebidas, uma em cada card",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Caso as receitas sejam de comida, deve-se carregar as 12 primeiras receitas",
              "fullTitle": "Devem ser carregadas as 12 primeiras receitas de comidas ou bebidas, uma em cada card Caso as receitas sejam de comida, deve-se carregar as 12 primeiras receitas",
              "timedOut": null,
              "duration": 1664,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.visit('http://localhost:3000/comidas', {\n  onBeforeLoad: function onBeforeLoad(win) {\n    win.fetch = fetchMock;\n  }\n});\ncheckFirstTwelveRecipes(mealsMock.meals);",
              "err": {},
              "uuid": "1d2a4e84-de63-4d9d-9799-5d39880842c6",
              "parentUUID": "263ad522-61eb-42b4-9f44-2e19c4066aa9",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Caso as receitas sejam de bebida, deve-se carregar as 12 primeiras receitas",
              "fullTitle": "Devem ser carregadas as 12 primeiras receitas de comidas ou bebidas, uma em cada card Caso as receitas sejam de bebida, deve-se carregar as 12 primeiras receitas",
              "timedOut": null,
              "duration": 954,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.visit('http://localhost:3000/bebidas', {\n  onBeforeLoad: function onBeforeLoad(win) {\n    win.fetch = fetchMock;\n  }\n});\ncheckFirstTwelveRecipes(drinksMock.drinks, false);",
              "err": {},
              "uuid": "f3d587cc-21bc-4e70-90e8-b969dc685d1d",
              "parentUUID": "263ad522-61eb-42b4-9f44-2e19c4066aa9",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "1d2a4e84-de63-4d9d-9799-5d39880842c6",
            "f3d587cc-21bc-4e70-90e8-b969dc685d1d"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 2618,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "3a768e20-3ff8-4e89-b42d-27e475893dd3",
          "title": "A tela deve possuir botões de categoria para serem utilizados como filtro",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Caso as receitas sejam de comida, deve-se exibir as 5 primeiras categorias de comida",
              "fullTitle": "A tela deve possuir botões de categoria para serem utilizados como filtro Caso as receitas sejam de comida, deve-se exibir as 5 primeiras categorias de comida",
              "timedOut": null,
              "duration": 763,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.visit('http://localhost:3000/comidas', {\n  onBeforeLoad: function onBeforeLoad(win) {\n    win.fetch = fetchMock;\n  }\n});\nmealCategoriesMock.meals.slice(0, 5).forEach(function (_ref) {\n  var category = _ref.strCategory;\n  cy.get(\"[data-testid=\\\"\".concat(category, \"-category-filter\\\"]\"));\n});\nmealCategoriesMock.meals.slice(5).forEach(function (_ref2) {\n  var category = _ref2.strCategory;\n  cy.get(\"[data-testid=\\\"\".concat(category, \"-category-filter\\\"]\")).should('not.exist');\n});",
              "err": {},
              "uuid": "aff74df8-7829-489c-afd6-bc345b988d85",
              "parentUUID": "3a768e20-3ff8-4e89-b42d-27e475893dd3",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Caso as receitas sejam de bebida, deve-se exibir as 5 primeiras categorias de bebida",
              "fullTitle": "A tela deve possuir botões de categoria para serem utilizados como filtro Caso as receitas sejam de bebida, deve-se exibir as 5 primeiras categorias de bebida",
              "timedOut": null,
              "duration": 453,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.visit('http://localhost:3000/bebidas', {\n  onBeforeLoad: function onBeforeLoad(win) {\n    win.fetch = fetchMock;\n  }\n});\ndrinkCategoriesMock.drinks.slice(0, 5).forEach(function (_ref3) {\n  var category = _ref3.strCategory;\n  cy.get(\"[data-testid=\\\"\".concat(category, \"-category-filter\\\"]\"));\n});\ndrinkCategoriesMock.drinks.slice(5).forEach(function (_ref4) {\n  var category = _ref4.strCategory;\n  cy.get(\"[data-testid=\\\"\".concat(category, \"-category-filter\\\"]\")).should('not.exist');\n});",
              "err": {},
              "uuid": "9c99d7c6-a65b-4aa0-9798-b61607c3bc59",
              "parentUUID": "3a768e20-3ff8-4e89-b42d-27e475893dd3",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "aff74df8-7829-489c-afd6-bc345b988d85",
            "9c99d7c6-a65b-4aa0-9798-b61607c3bc59"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 1216,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "0de77516-9835-4627-a4c2-530cf047c32e",
          "title": "Ao clicar no filtro de categoria, todas as receitas devem mudar para os dados filtrados da API",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Caso as receitas sejam de comida e a categoria seja \"Beef\", deve-se carregar as 12 primeiras receitas de \"Beef\"",
              "fullTitle": "Ao clicar no filtro de categoria, todas as receitas devem mudar para os dados filtrados da API Caso as receitas sejam de comida e a categoria seja \"Beef\", deve-se carregar as 12 primeiras receitas de \"Beef\"",
              "timedOut": null,
              "duration": 1421,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.visit('http://localhost:3000/comidas', {\n  onBeforeLoad: function onBeforeLoad(win) {\n    win.fetch = fetchMock;\n  }\n});\ncy.get('[data-testid=\"Beef-category-filter\"]').click();\ncheckFirstTwelveRecipes(beefMealsMock.meals);",
              "err": {},
              "uuid": "7e46871d-2e21-49b2-8cdf-cea827888736",
              "parentUUID": "0de77516-9835-4627-a4c2-530cf047c32e",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Caso as receitas sejam de comida e a categoria seja \"Breakfast\", deve-se carregar as 12 primeiras receitas de \"Breakfast\"",
              "fullTitle": "Ao clicar no filtro de categoria, todas as receitas devem mudar para os dados filtrados da API Caso as receitas sejam de comida e a categoria seja \"Breakfast\", deve-se carregar as 12 primeiras receitas de \"Breakfast\"",
              "timedOut": null,
              "duration": 1724,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.visit('http://localhost:3000/comidas', {\n  onBeforeLoad: function onBeforeLoad(win) {\n    win.fetch = fetchMock;\n  }\n});\ncy.get('[data-testid=\"Breakfast-category-filter\"]').click();\ncheckFirstTwelveRecipes(breakfastMealsMock.meals);",
              "err": {},
              "uuid": "32e20379-28d2-4395-aef5-7296e9cc6f45",
              "parentUUID": "0de77516-9835-4627-a4c2-530cf047c32e",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Caso as receitas sejam de comida e a categoria seja \"Chicken\", deve-se carregar as 12 primeiras receitas de \"Chicken\"",
              "fullTitle": "Ao clicar no filtro de categoria, todas as receitas devem mudar para os dados filtrados da API Caso as receitas sejam de comida e a categoria seja \"Chicken\", deve-se carregar as 12 primeiras receitas de \"Chicken\"",
              "timedOut": null,
              "duration": 1469,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.visit('http://localhost:3000/comidas', {\n  onBeforeLoad: function onBeforeLoad(win) {\n    win.fetch = fetchMock;\n  }\n});\ncy.get('[data-testid=\"Chicken-category-filter\"]').click();\ncheckFirstTwelveRecipes(chickenMealsMock.meals);",
              "err": {},
              "uuid": "de5e6b7e-0d49-4ea0-9b4c-5186b0efcb96",
              "parentUUID": "0de77516-9835-4627-a4c2-530cf047c32e",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Caso as receitas sejam de comida e a categoria seja \"Dessert\", deve-se carregar as 12 primeiras receitas de \"Dessert\"",
              "fullTitle": "Ao clicar no filtro de categoria, todas as receitas devem mudar para os dados filtrados da API Caso as receitas sejam de comida e a categoria seja \"Dessert\", deve-se carregar as 12 primeiras receitas de \"Dessert\"",
              "timedOut": null,
              "duration": 1550,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.visit('http://localhost:3000/comidas', {\n  onBeforeLoad: function onBeforeLoad(win) {\n    win.fetch = fetchMock;\n  }\n});\ncy.get('[data-testid=\"Dessert-category-filter\"]').click();\ncheckFirstTwelveRecipes(dessertMealsMock.meals);",
              "err": {},
              "uuid": "4f6d7156-092f-440e-8d47-2fc26a91b41a",
              "parentUUID": "0de77516-9835-4627-a4c2-530cf047c32e",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Caso as receitas sejam de comida e a categoria seja \"Goat\", deve-se carregar as 12 primeiras receitas de \"Goat\"",
              "fullTitle": "Ao clicar no filtro de categoria, todas as receitas devem mudar para os dados filtrados da API Caso as receitas sejam de comida e a categoria seja \"Goat\", deve-se carregar as 12 primeiras receitas de \"Goat\"",
              "timedOut": null,
              "duration": 768,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.visit('http://localhost:3000/comidas', {\n  onBeforeLoad: function onBeforeLoad(win) {\n    win.fetch = fetchMock;\n  }\n});\ncy.get('[data-testid=\"Goat-category-filter\"]').click();\ncheckFirstTwelveRecipes(goatMealsMock.meals);",
              "err": {},
              "uuid": "bb7f767a-94c8-4ba6-a679-827175934e8b",
              "parentUUID": "0de77516-9835-4627-a4c2-530cf047c32e",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Caso as receitas sejam de bebida e a categoria seja \"Ordinary Drink\", deve-se carregar as 12 primeiras receitas de \"Ordinary Drink\"",
              "fullTitle": "Ao clicar no filtro de categoria, todas as receitas devem mudar para os dados filtrados da API Caso as receitas sejam de bebida e a categoria seja \"Ordinary Drink\", deve-se carregar as 12 primeiras receitas de \"Ordinary Drink\"",
              "timedOut": null,
              "duration": 1742,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.visit('http://localhost:3000/bebidas', {\n  onBeforeLoad: function onBeforeLoad(win) {\n    win.fetch = fetchMock;\n  }\n});\ncy.get('[data-testid=\"Ordinary Drink-category-filter\"]').click();\ncheckFirstTwelveRecipes(ordinaryDrinksMock.drinks, false);",
              "err": {},
              "uuid": "af06df14-6ae1-40e8-9375-4f3434859d53",
              "parentUUID": "0de77516-9835-4627-a4c2-530cf047c32e",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Caso as receitas sejam de bebida e a categoria seja \"Cocktail\", deve-se carregar as 12 primeiras receitas de \"Cocktail\"",
              "fullTitle": "Ao clicar no filtro de categoria, todas as receitas devem mudar para os dados filtrados da API Caso as receitas sejam de bebida e a categoria seja \"Cocktail\", deve-se carregar as 12 primeiras receitas de \"Cocktail\"",
              "timedOut": null,
              "duration": 1390,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.visit('http://localhost:3000/bebidas', {\n  onBeforeLoad: function onBeforeLoad(win) {\n    win.fetch = fetchMock;\n  }\n});\ncy.get('[data-testid=\"Cocktail-category-filter\"]').click();\ncheckFirstTwelveRecipes(cocktailDrinksMock.drinks, false);",
              "err": {},
              "uuid": "d7842ca3-b143-4b8f-a176-b1371ffb7fa4",
              "parentUUID": "0de77516-9835-4627-a4c2-530cf047c32e",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Caso as receitas sejam de bebida e a categoria seja \"Milk / Float / Shake\", deve-se carregar as 12 primeiras receitas de \"Milk / Float / Shake\"",
              "fullTitle": "Ao clicar no filtro de categoria, todas as receitas devem mudar para os dados filtrados da API Caso as receitas sejam de bebida e a categoria seja \"Milk / Float / Shake\", deve-se carregar as 12 primeiras receitas de \"Milk / Float / Shake\"",
              "timedOut": null,
              "duration": 1376,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.visit('http://localhost:3000/bebidas', {\n  onBeforeLoad: function onBeforeLoad(win) {\n    win.fetch = fetchMock;\n  }\n});\ncy.get('[data-testid=\"Milk / Float / Shake-category-filter\"]').click();\ncheckFirstTwelveRecipes(milkDrinksMock.drinks, false);",
              "err": {},
              "uuid": "c3d16ff7-9d9c-42e2-96a6-00c12fa62b87",
              "parentUUID": "0de77516-9835-4627-a4c2-530cf047c32e",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Caso as receitas sejam de bebida e a categoria seja \"Other/Unknown\", deve-se carregar as 12 primeiras receitas de \"Other/Unknown\"",
              "fullTitle": "Ao clicar no filtro de categoria, todas as receitas devem mudar para os dados filtrados da API Caso as receitas sejam de bebida e a categoria seja \"Other/Unknown\", deve-se carregar as 12 primeiras receitas de \"Other/Unknown\"",
              "timedOut": null,
              "duration": 1724,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.visit('http://localhost:3000/bebidas', {\n  onBeforeLoad: function onBeforeLoad(win) {\n    win.fetch = fetchMock;\n  }\n});\ncy.get('[data-testid=\"Other/Unknown-category-filter\"]').click();\ncheckFirstTwelveRecipes(otherDrinksMock.drinks, false);",
              "err": {},
              "uuid": "b26eb53a-59b1-4cc9-b15e-ab89088c1889",
              "parentUUID": "0de77516-9835-4627-a4c2-530cf047c32e",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Caso as receitas sejam de bebida e a categoria seja \"Cocoa\", deve-se carregar as 12 primeiras receitas de \"Cocoa\"",
              "fullTitle": "Ao clicar no filtro de categoria, todas as receitas devem mudar para os dados filtrados da API Caso as receitas sejam de bebida e a categoria seja \"Cocoa\", deve-se carregar as 12 primeiras receitas de \"Cocoa\"",
              "timedOut": null,
              "duration": 1147,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.visit('http://localhost:3000/bebidas', {\n  onBeforeLoad: function onBeforeLoad(win) {\n    win.fetch = fetchMock;\n  }\n});\ncy.get('[data-testid=\"Cocoa-category-filter\"]').click();\ncheckFirstTwelveRecipes(cocoaDrinksMock.drinks, false);",
              "err": {},
              "uuid": "0106dc02-341f-40e5-92b4-f89ad599b236",
              "parentUUID": "0de77516-9835-4627-a4c2-530cf047c32e",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "7e46871d-2e21-49b2-8cdf-cea827888736",
            "32e20379-28d2-4395-aef5-7296e9cc6f45",
            "de5e6b7e-0d49-4ea0-9b4c-5186b0efcb96",
            "4f6d7156-092f-440e-8d47-2fc26a91b41a",
            "bb7f767a-94c8-4ba6-a679-827175934e8b",
            "af06df14-6ae1-40e8-9375-4f3434859d53",
            "d7842ca3-b143-4b8f-a176-b1371ffb7fa4",
            "c3d16ff7-9d9c-42e2-96a6-00c12fa62b87",
            "b26eb53a-59b1-4cc9-b15e-ab89088c1889",
            "0106dc02-341f-40e5-92b4-f89ad599b236"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 14311,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "3b08ddae-6db8-44cb-8e2c-40d7dfad9290",
          "title": "Caso o filtro selecionado no momento seja selecionado de novo, o app deve retornar as receitas sem nenhum filtro, como se fosse um toggle",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Caso as receitas sejam de comida e o filtro tenha sido selecionado novamente, deve-se retornar as 12 primeiras receitas sem filtro",
              "fullTitle": "Caso o filtro selecionado no momento seja selecionado de novo, o app deve retornar as receitas sem nenhum filtro, como se fosse um toggle Caso as receitas sejam de comida e o filtro tenha sido selecionado novamente, deve-se retornar as 12 primeiras receitas sem filtro",
              "timedOut": null,
              "duration": 1592,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.visit('http://localhost:3000/comidas', {\n  onBeforeLoad: function onBeforeLoad(win) {\n    win.fetch = fetchMock;\n  }\n});\ncy.get('[data-testid=\"Beef-category-filter\"]').click();\ncy.get('[data-testid=\"Beef-category-filter\"]').click();\ncheckFirstTwelveRecipes(mealsMock.meals);",
              "err": {},
              "uuid": "dd194a9f-15f0-4e33-89de-c29855748282",
              "parentUUID": "3b08ddae-6db8-44cb-8e2c-40d7dfad9290",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Caso as receitas sejam de bebida e o filtro tenha sido selecionado novamente, deve-se retornar as 12 primeiras receitas sem filtro",
              "fullTitle": "Caso o filtro selecionado no momento seja selecionado de novo, o app deve retornar as receitas sem nenhum filtro, como se fosse um toggle Caso as receitas sejam de bebida e o filtro tenha sido selecionado novamente, deve-se retornar as 12 primeiras receitas sem filtro",
              "timedOut": null,
              "duration": 1531,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.visit('http://localhost:3000/bebidas', {\n  onBeforeLoad: function onBeforeLoad(win) {\n    win.fetch = fetchMock;\n  }\n});\ncy.get('[data-testid=\"Ordinary Drink-category-filter\"]').click();\ncy.get('[data-testid=\"Ordinary Drink-category-filter\"]').click();\ncheckFirstTwelveRecipes(drinksMock.drinks, false);",
              "err": {},
              "uuid": "64513fd8-7e1e-43da-b9d0-76161b2c5870",
              "parentUUID": "3b08ddae-6db8-44cb-8e2c-40d7dfad9290",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "dd194a9f-15f0-4e33-89de-c29855748282",
            "64513fd8-7e1e-43da-b9d0-76161b2c5870"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 3123,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "0d54b456-1049-4135-8b2e-92e6b194581d",
          "title": "Apenas um filtro de categoria deve poder ser selecionado por vez",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Caso as receitas sejam de comida apenas um filtro de categoria deve poder ser selecionado por vez",
              "fullTitle": "Apenas um filtro de categoria deve poder ser selecionado por vez Caso as receitas sejam de comida apenas um filtro de categoria deve poder ser selecionado por vez",
              "timedOut": null,
              "duration": 2138,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.visit('http://localhost:3000/comidas', {\n  onBeforeLoad: function onBeforeLoad(win) {\n    win.fetch = fetchMock;\n  }\n});\ncy.get('[data-testid=\"Beef-category-filter\"]').click();\ncheckFirstTwelveRecipes(beefMealsMock.meals);\ncy.get('[data-testid=\"Breakfast-category-filter\"]').click();\ncheckFirstTwelveRecipes(breakfastMealsMock.meals);",
              "err": {},
              "uuid": "16c8f247-3a90-4b8d-b8e9-6228931847d4",
              "parentUUID": "0d54b456-1049-4135-8b2e-92e6b194581d",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Caso as receitas sejam de bebida apenas um filtro de categoria deve poder ser selecionado por vez",
              "fullTitle": "Apenas um filtro de categoria deve poder ser selecionado por vez Caso as receitas sejam de bebida apenas um filtro de categoria deve poder ser selecionado por vez",
              "timedOut": null,
              "duration": 2275,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.visit('http://localhost:3000/bebidas', {\n  onBeforeLoad: function onBeforeLoad(win) {\n    win.fetch = fetchMock;\n  }\n});\ncy.get('[data-testid=\"Ordinary Drink-category-filter\"]').click();\ncheckFirstTwelveRecipes(ordinaryDrinksMock.drinks, false);\ncy.get('[data-testid=\"Cocktail-category-filter\"]').click();\ncheckFirstTwelveRecipes(cocktailDrinksMock.drinks, false);",
              "err": {},
              "uuid": "262f3b97-7445-4305-bdd7-2de86cab484a",
              "parentUUID": "0d54b456-1049-4135-8b2e-92e6b194581d",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "16c8f247-3a90-4b8d-b8e9-6228931847d4",
            "262f3b97-7445-4305-bdd7-2de86cab484a"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 4413,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "52386dd6-8f91-45e9-bccb-2daac9c3056d",
          "title": "No filtro de categorias deve existir a opção de filtrar por todas as categorias",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Caso as receitas sejam de comida deve existir a opção de filtrar por todas as categorias",
              "fullTitle": "No filtro de categorias deve existir a opção de filtrar por todas as categorias Caso as receitas sejam de comida deve existir a opção de filtrar por todas as categorias",
              "timedOut": null,
              "duration": 2349,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.visit('http://localhost:3000/comidas', {\n  onBeforeLoad: function onBeforeLoad(win) {\n    win.fetch = fetchMock;\n  }\n});\ncy.get('[data-testid=\"Beef-category-filter\"]').click();\ncheckFirstTwelveRecipes(beefMealsMock.meals);\ncy.get('[data-testid=\"All-category-filter\"]').click();\ncheckFirstTwelveRecipes(mealsMock.meals);",
              "err": {},
              "uuid": "1ad56be7-d23d-4634-92f1-c4e7f239e325",
              "parentUUID": "52386dd6-8f91-45e9-bccb-2daac9c3056d",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Caso as receitas sejam de bebida deve existir a opção de filtrar por todas as categorias",
              "fullTitle": "No filtro de categorias deve existir a opção de filtrar por todas as categorias Caso as receitas sejam de bebida deve existir a opção de filtrar por todas as categorias",
              "timedOut": null,
              "duration": 2297,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.visit('http://localhost:3000/bebidas', {\n  onBeforeLoad: function onBeforeLoad(win) {\n    win.fetch = fetchMock;\n  }\n});\ncy.get('[data-testid=\"Ordinary Drink-category-filter\"]').click();\ncheckFirstTwelveRecipes(ordinaryDrinksMock.drinks, false);\ncy.get('[data-testid=\"All-category-filter\"]').click();\ncheckFirstTwelveRecipes(drinksMock.drinks, false);",
              "err": {},
              "uuid": "b28eb5d7-2181-4a02-8d5d-e6c5390c15d6",
              "parentUUID": "52386dd6-8f91-45e9-bccb-2daac9c3056d",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "1ad56be7-d23d-4634-92f1-c4e7f239e325",
            "b28eb5d7-2181-4a02-8d5d-e6c5390c15d6"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 4646,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "512bd2dd-2e81-4c1f-aec3-15a4351df5e4",
          "title": "Ao clicar no card, a rota deve mudar para a tela de detalhes da receita com o ID da mesma na URL",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Caso as receitas sejam de comida a rota deve mudar para a tela de detalhes da receita",
              "fullTitle": "Ao clicar no card, a rota deve mudar para a tela de detalhes da receita com o ID da mesma na URL Caso as receitas sejam de comida a rota deve mudar para a tela de detalhes da receita",
              "timedOut": null,
              "duration": 1150,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.visit('http://localhost:3000/comidas', {\n  onBeforeLoad: function onBeforeLoad(win) {\n    win.fetch = fetchMock;\n  }\n});\ncy.get('[data-testid=\"0-recipe-card\"]').click();\ncy.location().should(function (loc) {\n  return expect(loc.pathname).to.eq('/comidas/52977');\n});",
              "err": {},
              "uuid": "b3f78f59-4e27-4be9-ba43-f3da1ec39377",
              "parentUUID": "512bd2dd-2e81-4c1f-aec3-15a4351df5e4",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Caso as receitas sejam de bebida a rota deve mudar para a tela de detalhes da receita",
              "fullTitle": "Ao clicar no card, a rota deve mudar para a tela de detalhes da receita com o ID da mesma na URL Caso as receitas sejam de bebida a rota deve mudar para a tela de detalhes da receita",
              "timedOut": null,
              "duration": 392,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.visit('http://localhost:3000/bebidas', {\n  onBeforeLoad: function onBeforeLoad(win) {\n    win.fetch = fetchMock;\n  }\n});\ncy.get('[data-testid=\"0-recipe-card\"]').click();\ncy.location().should(function (loc) {\n  return expect(loc.pathname).to.eq('/bebidas/15997');\n});",
              "err": {},
              "uuid": "4fb01fa1-53b8-4345-88d7-ed773be01268",
              "parentUUID": "512bd2dd-2e81-4c1f-aec3-15a4351df5e4",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "b3f78f59-4e27-4be9-ba43-f3da1ec39377",
            "4fb01fa1-53b8-4345-88d7-ed773be01268"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 1542,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    }
  ],
  "meta": {
    "mocha": {
      "version": "8.1.3"
    },
    "mochawesome": {
      "options": {
        "quiet": false,
        "reportFilename": "mochawesome",
        "saveHtml": false,
        "saveJson": true,
        "consoleReporter": "spec",
        "useInlineDiffs": false,
        "code": true
      },
      "version": "6.1.1"
    },
    "marge": {
      "options": {
        "id": "default",
        "reportDir": "cypress/reports",
        "overwrite": false,
        "html": false,
        "json": true
      },
      "version": "5.1.0"
    }
  }
}
{
  "stats": {
    "suites": 8,
    "tests": 24,
    "passes": 24,
    "pending": 0,
    "failures": 0,
    "start": "2020-10-01T01:45:23.740Z",
    "end": "2020-10-01T01:46:16.828Z",
    "duration": 53088,
    "testsRegistered": 24,
    "passPercent": 100,
    "pendingPercent": 0,
    "other": 0,
    "hasOther": false,
    "skipped": 0,
    "hasSkipped": false
  },
  "results": [
    {
      "uuid": "e1c786c1-ead6-4ecf-a3e4-014c1d0badd6",
      "title": "",
      "fullFile": "cypress/integration/recipes_list_spec.js",
      "file": "cypress/integration/recipes_list_spec.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "9a87645d-9761-45b0-bf59-1e450d9a929a",
          "title": "Todos os elementos devem respeitar os atributos descritos no protótipo para a tela principal de receitas",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "A tela tem os data-testids de todos os 12 cards da tela de comidas",
              "fullTitle": "Todos os elementos devem respeitar os atributos descritos no protótipo para a tela principal de receitas A tela tem os data-testids de todos os 12 cards da tela de comidas",
              "timedOut": null,
              "duration": 3863,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.visit('http://localhost:3000/comidas', {\n  onBeforeLoad: function onBeforeLoad(win) {\n    win.fetch = fetchMock;\n  }\n});\nfor (var index = 0; index < 12; index += 1) {\n  cy.get(\"[data-testid=\\\"\".concat(index, \"-recipe-card\\\"]\"));\n  cy.get(\"[data-testid=\\\"\".concat(index, \"-card-img\\\"]\"));\n  cy.get(\"[data-testid=\\\"\".concat(index, \"-card-name\\\"]\"));\n}\ncy.get('[data-testid=\"12-recipe-card\"]').should('not.exist');\ncy.get('[data-testid=\"12-card-img\"]').should('not.exist');\ncy.get('[data-testid=\"12-card-name\"]').should('not.exist');",
              "err": {},
              "uuid": "b1777201-b079-493d-a3f8-d78c9607297f",
              "parentUUID": "9a87645d-9761-45b0-bf59-1e450d9a929a",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "A tela tem os data-testids de todos os 12 cards da tela de bebidas",
              "fullTitle": "Todos os elementos devem respeitar os atributos descritos no protótipo para a tela principal de receitas A tela tem os data-testids de todos os 12 cards da tela de bebidas",
              "timedOut": null,
              "duration": 1565,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.visit('http://localhost:3000/bebidas', {\n  onBeforeLoad: function onBeforeLoad(win) {\n    win.fetch = fetchMock;\n  }\n});\nfor (var index = 0; index < 12; index += 1) {\n  cy.get(\"[data-testid=\\\"\".concat(index, \"-recipe-card\\\"]\"));\n  cy.get(\"[data-testid=\\\"\".concat(index, \"-card-img\\\"]\"));\n  cy.get(\"[data-testid=\\\"\".concat(index, \"-card-name\\\"]\"));\n}\ncy.get('[data-testid=\"12-recipe-card\"]').should('not.exist');\ncy.get('[data-testid=\"12-card-img\"]').should('not.exist');\ncy.get('[data-testid=\"12-card-name\"]').should('not.exist');",
              "err": {},
              "uuid": "cf86d845-f089-4c9f-8655-da32bb6ce282",
              "parentUUID": "9a87645d-9761-45b0-bf59-1e450d9a929a",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "b1777201-b079-493d-a3f8-d78c9607297f",
            "cf86d845-f089-4c9f-8655-da32bb6ce282"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 5428,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "2e877037-1c41-4704-bbaa-35e4f6964f06",
          "title": "Devem ser carregadas as 12 primeiras receitas de comidas ou bebidas, uma em cada card",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Caso as receitas sejam de comida, deve-se carregar as 12 primeiras receitas",
              "fullTitle": "Devem ser carregadas as 12 primeiras receitas de comidas ou bebidas, uma em cada card Caso as receitas sejam de comida, deve-se carregar as 12 primeiras receitas",
              "timedOut": null,
              "duration": 1154,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.visit('http://localhost:3000/comidas', {\n  onBeforeLoad: function onBeforeLoad(win) {\n    win.fetch = fetchMock;\n  }\n});\ncheckFirstTwelveRecipes(mealsMock.meals);",
              "err": {},
              "uuid": "004675c6-20ef-472a-8404-b2a03bae5a49",
              "parentUUID": "2e877037-1c41-4704-bbaa-35e4f6964f06",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Caso as receitas sejam de bebida, deve-se carregar as 12 primeiras receitas",
              "fullTitle": "Devem ser carregadas as 12 primeiras receitas de comidas ou bebidas, uma em cada card Caso as receitas sejam de bebida, deve-se carregar as 12 primeiras receitas",
              "timedOut": null,
              "duration": 954,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.visit('http://localhost:3000/bebidas', {\n  onBeforeLoad: function onBeforeLoad(win) {\n    win.fetch = fetchMock;\n  }\n});\ncheckFirstTwelveRecipes(drinksMock.drinks, false);",
              "err": {},
              "uuid": "550c0bdc-3b55-4721-a641-c6df4d8ce6ef",
              "parentUUID": "2e877037-1c41-4704-bbaa-35e4f6964f06",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "004675c6-20ef-472a-8404-b2a03bae5a49",
            "550c0bdc-3b55-4721-a641-c6df4d8ce6ef"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 2108,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "b93cefc4-3798-4f60-bc6f-2961f855564a",
          "title": "A tela deve possuir botões de categoria para serem utilizados como filtro",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Caso as receitas sejam de comida, deve-se exibir as 5 primeiras categorias de comida",
              "fullTitle": "A tela deve possuir botões de categoria para serem utilizados como filtro Caso as receitas sejam de comida, deve-se exibir as 5 primeiras categorias de comida",
              "timedOut": null,
              "duration": 830,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.visit('http://localhost:3000/comidas', {\n  onBeforeLoad: function onBeforeLoad(win) {\n    win.fetch = fetchMock;\n  }\n});\nmealCategoriesMock.meals.slice(0, 5).forEach(function (_ref) {\n  var category = _ref.strCategory;\n  cy.get(\"[data-testid=\\\"\".concat(category, \"-category-filter\\\"]\"));\n});\nmealCategoriesMock.meals.slice(5).forEach(function (_ref2) {\n  var category = _ref2.strCategory;\n  cy.get(\"[data-testid=\\\"\".concat(category, \"-category-filter\\\"]\")).should('not.exist');\n});",
              "err": {},
              "uuid": "a9ca14d7-bf03-4394-9965-cec308734e66",
              "parentUUID": "b93cefc4-3798-4f60-bc6f-2961f855564a",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Caso as receitas sejam de bebida, deve-se exibir as 5 primeiras categorias de bebida",
              "fullTitle": "A tela deve possuir botões de categoria para serem utilizados como filtro Caso as receitas sejam de bebida, deve-se exibir as 5 primeiras categorias de bebida",
              "timedOut": null,
              "duration": 481,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.visit('http://localhost:3000/bebidas', {\n  onBeforeLoad: function onBeforeLoad(win) {\n    win.fetch = fetchMock;\n  }\n});\ndrinkCategoriesMock.drinks.slice(0, 5).forEach(function (_ref3) {\n  var category = _ref3.strCategory;\n  cy.get(\"[data-testid=\\\"\".concat(category, \"-category-filter\\\"]\"));\n});\ndrinkCategoriesMock.drinks.slice(5).forEach(function (_ref4) {\n  var category = _ref4.strCategory;\n  cy.get(\"[data-testid=\\\"\".concat(category, \"-category-filter\\\"]\")).should('not.exist');\n});",
              "err": {},
              "uuid": "0d0f268a-d931-4004-bf84-e38370a1bf3f",
              "parentUUID": "b93cefc4-3798-4f60-bc6f-2961f855564a",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "a9ca14d7-bf03-4394-9965-cec308734e66",
            "0d0f268a-d931-4004-bf84-e38370a1bf3f"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 1311,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "10a87fda-2f45-4376-b3c3-c494456da1e0",
          "title": "Ao clicar no filtro de categoria, todas as receitas devem mudar para os dados filtrados da API",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Caso as receitas sejam de comida e a categoria seja \"Beef\", deve-se carregar as 12 primeiras receitas de \"Beef\"",
              "fullTitle": "Ao clicar no filtro de categoria, todas as receitas devem mudar para os dados filtrados da API Caso as receitas sejam de comida e a categoria seja \"Beef\", deve-se carregar as 12 primeiras receitas de \"Beef\"",
              "timedOut": null,
              "duration": 1578,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.visit('http://localhost:3000/comidas', {\n  onBeforeLoad: function onBeforeLoad(win) {\n    win.fetch = fetchMock;\n  }\n});\ncy.get('[data-testid=\"Beef-category-filter\"]').click();\ncheckFirstTwelveRecipes(beefMealsMock.meals);",
              "err": {},
              "uuid": "afeaf77a-d7ef-4872-87d8-1eb005d15db6",
              "parentUUID": "10a87fda-2f45-4376-b3c3-c494456da1e0",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Caso as receitas sejam de comida e a categoria seja \"Breakfast\", deve-se carregar as 12 primeiras receitas de \"Breakfast\"",
              "fullTitle": "Ao clicar no filtro de categoria, todas as receitas devem mudar para os dados filtrados da API Caso as receitas sejam de comida e a categoria seja \"Breakfast\", deve-se carregar as 12 primeiras receitas de \"Breakfast\"",
              "timedOut": null,
              "duration": 1099,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.visit('http://localhost:3000/comidas', {\n  onBeforeLoad: function onBeforeLoad(win) {\n    win.fetch = fetchMock;\n  }\n});\ncy.get('[data-testid=\"Breakfast-category-filter\"]').click();\ncheckFirstTwelveRecipes(breakfastMealsMock.meals);",
              "err": {},
              "uuid": "a94df70d-2197-43e9-8d8a-d7acdc0a4e7e",
              "parentUUID": "10a87fda-2f45-4376-b3c3-c494456da1e0",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Caso as receitas sejam de comida e a categoria seja \"Chicken\", deve-se carregar as 12 primeiras receitas de \"Chicken\"",
              "fullTitle": "Ao clicar no filtro de categoria, todas as receitas devem mudar para os dados filtrados da API Caso as receitas sejam de comida e a categoria seja \"Chicken\", deve-se carregar as 12 primeiras receitas de \"Chicken\"",
              "timedOut": null,
              "duration": 1539,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.visit('http://localhost:3000/comidas', {\n  onBeforeLoad: function onBeforeLoad(win) {\n    win.fetch = fetchMock;\n  }\n});\ncy.get('[data-testid=\"Chicken-category-filter\"]').click();\ncheckFirstTwelveRecipes(chickenMealsMock.meals);",
              "err": {},
              "uuid": "8f65c4c2-7d6d-499c-93a3-a4fcb65f286d",
              "parentUUID": "10a87fda-2f45-4376-b3c3-c494456da1e0",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Caso as receitas sejam de comida e a categoria seja \"Dessert\", deve-se carregar as 12 primeiras receitas de \"Dessert\"",
              "fullTitle": "Ao clicar no filtro de categoria, todas as receitas devem mudar para os dados filtrados da API Caso as receitas sejam de comida e a categoria seja \"Dessert\", deve-se carregar as 12 primeiras receitas de \"Dessert\"",
              "timedOut": null,
              "duration": 1320,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.visit('http://localhost:3000/comidas', {\n  onBeforeLoad: function onBeforeLoad(win) {\n    win.fetch = fetchMock;\n  }\n});\ncy.get('[data-testid=\"Dessert-category-filter\"]').click();\ncheckFirstTwelveRecipes(dessertMealsMock.meals);",
              "err": {},
              "uuid": "aa1e4033-2df7-4221-b9f9-167688a31908",
              "parentUUID": "10a87fda-2f45-4376-b3c3-c494456da1e0",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Caso as receitas sejam de comida e a categoria seja \"Goat\", deve-se carregar as 12 primeiras receitas de \"Goat\"",
              "fullTitle": "Ao clicar no filtro de categoria, todas as receitas devem mudar para os dados filtrados da API Caso as receitas sejam de comida e a categoria seja \"Goat\", deve-se carregar as 12 primeiras receitas de \"Goat\"",
              "timedOut": null,
              "duration": 608,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.visit('http://localhost:3000/comidas', {\n  onBeforeLoad: function onBeforeLoad(win) {\n    win.fetch = fetchMock;\n  }\n});\ncy.get('[data-testid=\"Goat-category-filter\"]').click();\ncheckFirstTwelveRecipes(goatMealsMock.meals);",
              "err": {},
              "uuid": "829bac04-acc4-4514-a22d-ffe4d7703659",
              "parentUUID": "10a87fda-2f45-4376-b3c3-c494456da1e0",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Caso as receitas sejam de bebida e a categoria seja \"Ordinary Drink\", deve-se carregar as 12 primeiras receitas de \"Ordinary Drink\"",
              "fullTitle": "Ao clicar no filtro de categoria, todas as receitas devem mudar para os dados filtrados da API Caso as receitas sejam de bebida e a categoria seja \"Ordinary Drink\", deve-se carregar as 12 primeiras receitas de \"Ordinary Drink\"",
              "timedOut": null,
              "duration": 1477,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.visit('http://localhost:3000/bebidas', {\n  onBeforeLoad: function onBeforeLoad(win) {\n    win.fetch = fetchMock;\n  }\n});\ncy.get('[data-testid=\"Ordinary Drink-category-filter\"]').click();\ncheckFirstTwelveRecipes(ordinaryDrinksMock.drinks, false);",
              "err": {},
              "uuid": "f5632623-1892-48fe-ba72-3272025acbb6",
              "parentUUID": "10a87fda-2f45-4376-b3c3-c494456da1e0",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Caso as receitas sejam de bebida e a categoria seja \"Cocktail\", deve-se carregar as 12 primeiras receitas de \"Cocktail\"",
              "fullTitle": "Ao clicar no filtro de categoria, todas as receitas devem mudar para os dados filtrados da API Caso as receitas sejam de bebida e a categoria seja \"Cocktail\", deve-se carregar as 12 primeiras receitas de \"Cocktail\"",
              "timedOut": null,
              "duration": 1148,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.visit('http://localhost:3000/bebidas', {\n  onBeforeLoad: function onBeforeLoad(win) {\n    win.fetch = fetchMock;\n  }\n});\ncy.get('[data-testid=\"Cocktail-category-filter\"]').click();\ncheckFirstTwelveRecipes(cocktailDrinksMock.drinks, false);",
              "err": {},
              "uuid": "e1d1ea4b-e8df-4392-b644-13d60d315843",
              "parentUUID": "10a87fda-2f45-4376-b3c3-c494456da1e0",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Caso as receitas sejam de bebida e a categoria seja \"Milk / Float / Shake\", deve-se carregar as 12 primeiras receitas de \"Milk / Float / Shake\"",
              "fullTitle": "Ao clicar no filtro de categoria, todas as receitas devem mudar para os dados filtrados da API Caso as receitas sejam de bebida e a categoria seja \"Milk / Float / Shake\", deve-se carregar as 12 primeiras receitas de \"Milk / Float / Shake\"",
              "timedOut": null,
              "duration": 1044,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.visit('http://localhost:3000/bebidas', {\n  onBeforeLoad: function onBeforeLoad(win) {\n    win.fetch = fetchMock;\n  }\n});\ncy.get('[data-testid=\"Milk / Float / Shake-category-filter\"]').click();\ncheckFirstTwelveRecipes(milkDrinksMock.drinks, false);",
              "err": {},
              "uuid": "5e18852e-8ec0-4c19-8987-d89f3db1edec",
              "parentUUID": "10a87fda-2f45-4376-b3c3-c494456da1e0",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Caso as receitas sejam de bebida e a categoria seja \"Other/Unknown\", deve-se carregar as 12 primeiras receitas de \"Other/Unknown\"",
              "fullTitle": "Ao clicar no filtro de categoria, todas as receitas devem mudar para os dados filtrados da API Caso as receitas sejam de bebida e a categoria seja \"Other/Unknown\", deve-se carregar as 12 primeiras receitas de \"Other/Unknown\"",
              "timedOut": null,
              "duration": 1380,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.visit('http://localhost:3000/bebidas', {\n  onBeforeLoad: function onBeforeLoad(win) {\n    win.fetch = fetchMock;\n  }\n});\ncy.get('[data-testid=\"Other/Unknown-category-filter\"]').click();\ncheckFirstTwelveRecipes(otherDrinksMock.drinks, false);",
              "err": {},
              "uuid": "01af440f-de21-4b78-b695-d30d4ff25d4d",
              "parentUUID": "10a87fda-2f45-4376-b3c3-c494456da1e0",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Caso as receitas sejam de bebida e a categoria seja \"Cocoa\", deve-se carregar as 12 primeiras receitas de \"Cocoa\"",
              "fullTitle": "Ao clicar no filtro de categoria, todas as receitas devem mudar para os dados filtrados da API Caso as receitas sejam de bebida e a categoria seja \"Cocoa\", deve-se carregar as 12 primeiras receitas de \"Cocoa\"",
              "timedOut": null,
              "duration": 785,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.visit('http://localhost:3000/bebidas', {\n  onBeforeLoad: function onBeforeLoad(win) {\n    win.fetch = fetchMock;\n  }\n});\ncy.get('[data-testid=\"Cocoa-category-filter\"]').click();\ncheckFirstTwelveRecipes(cocoaDrinksMock.drinks, false);",
              "err": {},
              "uuid": "1f46cf1c-6e41-4c5d-8df6-04dd79cca82e",
              "parentUUID": "10a87fda-2f45-4376-b3c3-c494456da1e0",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "afeaf77a-d7ef-4872-87d8-1eb005d15db6",
            "a94df70d-2197-43e9-8d8a-d7acdc0a4e7e",
            "8f65c4c2-7d6d-499c-93a3-a4fcb65f286d",
            "aa1e4033-2df7-4221-b9f9-167688a31908",
            "829bac04-acc4-4514-a22d-ffe4d7703659",
            "f5632623-1892-48fe-ba72-3272025acbb6",
            "e1d1ea4b-e8df-4392-b644-13d60d315843",
            "5e18852e-8ec0-4c19-8987-d89f3db1edec",
            "01af440f-de21-4b78-b695-d30d4ff25d4d",
            "1f46cf1c-6e41-4c5d-8df6-04dd79cca82e"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 11978,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "8a768902-663a-452e-b770-51f4e8a43a85",
          "title": "Caso o filtro selecionado no momento seja selecionado de novo, o app deve retornar as receitas sem nenhum filtro, como se fosse um toggle",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Caso as receitas sejam de comida e o filtro tenha sido selecionado novamente, deve-se retornar as 12 primeiras receitas sem filtro",
              "fullTitle": "Caso o filtro selecionado no momento seja selecionado de novo, o app deve retornar as receitas sem nenhum filtro, como se fosse um toggle Caso as receitas sejam de comida e o filtro tenha sido selecionado novamente, deve-se retornar as 12 primeiras receitas sem filtro",
              "timedOut": null,
              "duration": 1134,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.visit('http://localhost:3000/comidas', {\n  onBeforeLoad: function onBeforeLoad(win) {\n    win.fetch = fetchMock;\n  }\n});\ncy.get('[data-testid=\"Beef-category-filter\"]').click();\ncy.get('[data-testid=\"Beef-category-filter\"]').click();\ncheckFirstTwelveRecipes(mealsMock.meals);",
              "err": {},
              "uuid": "b5cc8bba-bfec-4e67-980b-fb3531e224f1",
              "parentUUID": "8a768902-663a-452e-b770-51f4e8a43a85",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Caso as receitas sejam de bebida e o filtro tenha sido selecionado novamente, deve-se retornar as 12 primeiras receitas sem filtro",
              "fullTitle": "Caso o filtro selecionado no momento seja selecionado de novo, o app deve retornar as receitas sem nenhum filtro, como se fosse um toggle Caso as receitas sejam de bebida e o filtro tenha sido selecionado novamente, deve-se retornar as 12 primeiras receitas sem filtro",
              "timedOut": null,
              "duration": 1162,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.visit('http://localhost:3000/bebidas', {\n  onBeforeLoad: function onBeforeLoad(win) {\n    win.fetch = fetchMock;\n  }\n});\ncy.get('[data-testid=\"Ordinary Drink-category-filter\"]').click();\ncy.get('[data-testid=\"Ordinary Drink-category-filter\"]').click();\ncheckFirstTwelveRecipes(drinksMock.drinks, false);",
              "err": {},
              "uuid": "5a4f110e-1027-4c55-9718-21a53cd67cad",
              "parentUUID": "8a768902-663a-452e-b770-51f4e8a43a85",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "b5cc8bba-bfec-4e67-980b-fb3531e224f1",
            "5a4f110e-1027-4c55-9718-21a53cd67cad"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 2296,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "2f819eb2-df13-442e-9a56-833194bdb486",
          "title": "Apenas um filtro de categoria deve poder ser selecionado por vez",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Caso as receitas sejam de comida apenas um filtro de categoria deve poder ser selecionado por vez",
              "fullTitle": "Apenas um filtro de categoria deve poder ser selecionado por vez Caso as receitas sejam de comida apenas um filtro de categoria deve poder ser selecionado por vez",
              "timedOut": null,
              "duration": 1691,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.visit('http://localhost:3000/comidas', {\n  onBeforeLoad: function onBeforeLoad(win) {\n    win.fetch = fetchMock;\n  }\n});\ncy.get('[data-testid=\"Beef-category-filter\"]').click();\ncheckFirstTwelveRecipes(beefMealsMock.meals);\ncy.get('[data-testid=\"Breakfast-category-filter\"]').click();\ncheckFirstTwelveRecipes(breakfastMealsMock.meals);",
              "err": {},
              "uuid": "447aaa01-44e1-4404-b93f-6a346527147a",
              "parentUUID": "2f819eb2-df13-442e-9a56-833194bdb486",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Caso as receitas sejam de bebida apenas um filtro de categoria deve poder ser selecionado por vez",
              "fullTitle": "Apenas um filtro de categoria deve poder ser selecionado por vez Caso as receitas sejam de bebida apenas um filtro de categoria deve poder ser selecionado por vez",
              "timedOut": null,
              "duration": 1340,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.visit('http://localhost:3000/bebidas', {\n  onBeforeLoad: function onBeforeLoad(win) {\n    win.fetch = fetchMock;\n  }\n});\ncy.get('[data-testid=\"Ordinary Drink-category-filter\"]').click();\ncheckFirstTwelveRecipes(ordinaryDrinksMock.drinks, false);\ncy.get('[data-testid=\"Cocktail-category-filter\"]').click();\ncheckFirstTwelveRecipes(cocktailDrinksMock.drinks, false);",
              "err": {},
              "uuid": "ab8b2448-1037-436f-a3d4-9b1c7b752b18",
              "parentUUID": "2f819eb2-df13-442e-9a56-833194bdb486",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "447aaa01-44e1-4404-b93f-6a346527147a",
            "ab8b2448-1037-436f-a3d4-9b1c7b752b18"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 3031,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "f22031cb-440a-48ff-a3d2-4adb5cbc6179",
          "title": "No filtro de categorias deve existir a opção de filtrar por todas as categorias",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Caso as receitas sejam de comida deve existir a opção de filtrar por todas as categorias",
              "fullTitle": "No filtro de categorias deve existir a opção de filtrar por todas as categorias Caso as receitas sejam de comida deve existir a opção de filtrar por todas as categorias",
              "timedOut": null,
              "duration": 17154,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.visit('http://localhost:3000/comidas', {\n  onBeforeLoad: function onBeforeLoad(win) {\n    win.fetch = fetchMock;\n  }\n});\ncy.get('[data-testid=\"Beef-category-filter\"]').click();\ncheckFirstTwelveRecipes(beefMealsMock.meals);\ncy.get('[data-testid=\"All-category-filter\"]').click();\ncheckFirstTwelveRecipes(mealsMock.meals);",
              "err": {},
              "uuid": "305f8e8e-7470-4c93-b30a-7e0c8bd8e777",
              "parentUUID": "f22031cb-440a-48ff-a3d2-4adb5cbc6179",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Caso as receitas sejam de bebida deve existir a opção de filtrar por todas as categorias",
              "fullTitle": "No filtro de categorias deve existir a opção de filtrar por todas as categorias Caso as receitas sejam de bebida deve existir a opção de filtrar por todas as categorias",
              "timedOut": null,
              "duration": 2008,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.visit('http://localhost:3000/bebidas', {\n  onBeforeLoad: function onBeforeLoad(win) {\n    win.fetch = fetchMock;\n  }\n});\ncy.get('[data-testid=\"Ordinary Drink-category-filter\"]').click();\ncheckFirstTwelveRecipes(ordinaryDrinksMock.drinks, false);\ncy.get('[data-testid=\"All-category-filter\"]').click();\ncheckFirstTwelveRecipes(drinksMock.drinks, false);",
              "err": {},
              "uuid": "d0cdc87c-1450-4b3d-b2f8-6cb2ef252470",
              "parentUUID": "f22031cb-440a-48ff-a3d2-4adb5cbc6179",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "305f8e8e-7470-4c93-b30a-7e0c8bd8e777",
            "d0cdc87c-1450-4b3d-b2f8-6cb2ef252470"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 19162,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "180eff6c-6ff0-4fbf-8b3a-7cf0d76aa0dd",
          "title": "Ao clicar no card, a rota deve mudar para a tela de detalhes da receita com o ID da mesma na URL",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Caso as receitas sejam de comida a rota deve mudar para a tela de detalhes da receita",
              "fullTitle": "Ao clicar no card, a rota deve mudar para a tela de detalhes da receita com o ID da mesma na URL Caso as receitas sejam de comida a rota deve mudar para a tela de detalhes da receita",
              "timedOut": null,
              "duration": 967,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.visit('http://localhost:3000/comidas', {\n  onBeforeLoad: function onBeforeLoad(win) {\n    win.fetch = fetchMock;\n  }\n});\ncy.get('[data-testid=\"0-recipe-card\"]').click();\ncy.location().should(function (loc) {\n  return expect(loc.pathname).to.eq('/comidas/52977');\n});",
              "err": {},
              "uuid": "744a29e6-77b5-425f-8894-31c00293856f",
              "parentUUID": "180eff6c-6ff0-4fbf-8b3a-7cf0d76aa0dd",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Caso as receitas sejam de bebida a rota deve mudar para a tela de detalhes da receita",
              "fullTitle": "Ao clicar no card, a rota deve mudar para a tela de detalhes da receita com o ID da mesma na URL Caso as receitas sejam de bebida a rota deve mudar para a tela de detalhes da receita",
              "timedOut": null,
              "duration": 483,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.visit('http://localhost:3000/bebidas', {\n  onBeforeLoad: function onBeforeLoad(win) {\n    win.fetch = fetchMock;\n  }\n});\ncy.get('[data-testid=\"0-recipe-card\"]').click();\ncy.location().should(function (loc) {\n  return expect(loc.pathname).to.eq('/bebidas/15997');\n});",
              "err": {},
              "uuid": "01af5e98-aa37-4f37-81b1-b9aaaf09f745",
              "parentUUID": "180eff6c-6ff0-4fbf-8b3a-7cf0d76aa0dd",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "744a29e6-77b5-425f-8894-31c00293856f",
            "01af5e98-aa37-4f37-81b1-b9aaaf09f745"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 1450,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    }
  ],
  "meta": {
    "mocha": {
      "version": "8.1.3"
    },
    "mochawesome": {
      "options": {
        "quiet": false,
        "reportFilename": "mochawesome",
        "saveHtml": false,
        "saveJson": true,
        "consoleReporter": "spec",
        "useInlineDiffs": false,
        "code": true
      },
      "version": "6.1.1"
    },
    "marge": {
      "options": {
        "id": "default",
        "reportDir": "cypress/reports",
        "overwrite": false,
        "html": false,
        "json": true
      },
      "version": "5.1.0"
    }
  }
}